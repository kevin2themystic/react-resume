{"version":3,"sources":["services/dataService.tsx","components/header.tsx","components/menu.tsx","components/aboutMe/coreValues.tsx","components/aboutMe/industryExperience.tsx","components/aboutMe/aboutMe.tsx","components/aboutThiSite.tsx","components/workExperience/workExperience.tsx","components/workExperience/workExperienceList.tsx","components/education/education.tsx","components/education/educationList.tsx","components/training/training.tsx","components/training/trainingList.tsx","components/componentContent.tsx","components/footer.tsx","services/logService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["aboutMe","eduction","header","objective","training","workExperience","Header","className","Avatar","alt","dateService","name","src","avatar","style","width","height","title","stack","Date","getFullYear","phone","href","pdfResume","email","target","rel","download","pdfResumeName","portfolio","Menu","to","CoreValues","Card","CardContent","color","Typography","variant","component","dataService","coreValues","IndustryExperience","organizationTypes","AboutMe","getCallToAction","lookingForFullStackDev","contactMeBtn","interestedInPortfolio","checkoutPortfolioBtn","ctaText","ctaBtnText","ctaHref","AboutThiSite","WorkExperience","this","props","organization","startDate","endDate","location","locationType","viewDetails","descriptions","map","weexperience","idx","key","React","Component","WorkExperienceList","handleViewDetailsChange","setState","state","handleSimplifiedDetailsChange","simplifiedDetailsView","populateWorkExperience","org","startDt","endDt","loc","locType","FormControlLabel","control","Switch","checked","onChange","label","workExperienceData","filter","we","type","experiencesSimplified","experiences","Education","institution","programName","EducationList","ed","Training","webLink","platform","TrainingList","td","ComponentContent","exact","path","AboutThisSite","render","Footer","init","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","logError","App","logger","Container","fixed","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b703f3e1.chunk.js","sourcesContent":["\r\nimport eduction from \"../data/education.json\";\r\nimport workExperience from \"../data/workexperience.json\";\r\nimport header from \"../data/header.json\";\r\nimport training from \"../data/training.json\";\r\nimport aboutMe from \"../data/aboutme.json\";\r\nimport objective from \"../data/objective.json\";\r\n\r\nexport default {\r\n    aboutMe,\r\n    eduction,\r\n    header,\r\n    objective,\r\n    training,\r\n    workExperience\r\n}","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport dateService from \"../services/dataService\"\r\n\r\nfunction Header () {\r\n  return (\r\n    <div className=\"component header-component\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <Avatar alt={dateService.header.name} \r\n                  src={dateService.header.avatar}\r\n                  style={{width: 210, height: 210}} />               \r\n        </div>\r\n        <div className=\"col-md-9\">\r\n          <div className=\"resume-contact-info\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                <div className=\"resume-name\">{dateService.header.name}</div>\r\n                <div className=\"resume-title\">{dateService.header.title}</div>\r\n                <div className=\"resume-stack\">{dateService.header.stack}</div>                  \r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"years-experience\">\r\n                  Total Years Experience: {new Date().getFullYear() - 2007} \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <i className=\"fa fa-phone header-icon\"></i>\r\n                <span className=\"resume-phone pl-2\">{dateService.header.phone}</span>&nbsp;&nbsp; \r\n\r\n                <i className=\"fa fa-envelope header-icon\"></i>\r\n                <a className=\"header-link pl-2\" \r\n                  href={`mailto:` + dateService.header.pdfResume}>{dateService.header.email}</a>&nbsp;&nbsp;&nbsp;\r\n\r\n                <i className=\"fa fa-file-pdf-o header-icon\"></i>\r\n                <a className=\"header-link pl-2\" \r\n                  href={dateService.header.pdfResume} \r\n                  target=\"_blank\" rel=\"noopener noreferrer\" \r\n                  download={dateService.header.pdfResumeName}>resume (pdf)</a>&nbsp;&nbsp;&nbsp; \r\n\r\n                <i className=\"fa fa-briefcase header-icon\"></i>\r\n                <a className=\"header-link pl-2\" href={dateService.header.portfolio} target=\"_blank\" rel=\"noopener noreferrer\">portfolio</a>                  \r\n              </div>\r\n            </div>\r\n          </div>             \r\n        </div>\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Menu () {\r\n    return (\r\n        <div className=\"menu\">\r\n            <NavLink to=\"/about-me\" className=\"menu-link btn\">About Me</NavLink>\r\n            <NavLink to=\"/work-xperience\" className=\"menu-link btn\">Work Experience</NavLink>\r\n            <NavLink to=\"/education\" className=\"menu-link btn\">Education</NavLink>\r\n            <NavLink to=\"/training\" className=\"menu-link btn\">Training</NavLink>\r\n            <NavLink to=\"/about-this-site\" className=\"menu-link btn\">About This Site</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport StraightenIcon from '@material-ui/icons/Straighten';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport dataService from \"../../services/dataService\";\r\n\r\nfunction CoreValues() {\r\n    return (\r\n        <div className=\"row about-me-section\">     \r\n        <div className=\"col-md-3\">\r\n          <Card className=\"about-me-core-value\">\r\n            <CardContent>\r\n              <StraightenIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></StraightenIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {dataService.aboutMe.coreValues[0]}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"core-value-text\">\r\n                {dataService.aboutMe.coreValues[1]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>          \r\n        </div>\r\n        <div className=\"col-md-3\">      \r\n          <Card className=\"about-me-core-value\">\r\n            <CardContent>\r\n              <FavoriteBorderIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></FavoriteBorderIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {dataService.aboutMe.coreValues[2]}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"core-value-text\">\r\n                {dataService.aboutMe.coreValues[3]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-md-3\">       \r\n          <Card className=\"about-me-core-value\">\r\n            <CardContent>\r\n              <GroupWorkIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></GroupWorkIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {dataService.aboutMe.coreValues[4]}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"core-value-text\">\r\n                {dataService.aboutMe.coreValues[5]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div> \r\n        <div className=\"col-md-3\">       \r\n          <Card className=\"about-me-core-value\">\r\n            <CardContent>\r\n              <FilterCenterFocusIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></FilterCenterFocusIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {dataService.aboutMe.coreValues[6]}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"core-value-text\">\r\n                {dataService.aboutMe.coreValues[7]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>     \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CoreValues;","import React from \"react\";\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport dataService from \"../../services/dataService\";\r\n\r\nfunction IndustryExperience() {\r\n    return (\r\n        <div className=\"row about-me-section\">  \r\n        <div className=\"col-md-4\">      \r\n          <Card className=\"about-me-sector\">\r\n            <CardContent>\r\n              <AccountBalanceIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></AccountBalanceIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Provincial Government Projects\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"experience-with-text\">\r\n                {dataService.aboutMe.organizationTypes[0]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-md-4\">      \r\n          <Card className=\"about-me-sector\">\r\n            <CardContent>\r\n              <LocationCityIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></LocationCityIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Municipal and Small Provincial Government Related Projects\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"experience-with-text\">\r\n                {dataService.aboutMe.organizationTypes[1]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-md-4\">       \r\n          <Card className=\"about-me-sector\">\r\n            <CardContent>\r\n              <BusinessIcon color=\"primary\" className=\"MuiSvgIcon-fontSizeLarge\"></BusinessIcon>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Small Business and Startup Projects\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" className=\"experience-with-text\">\r\n                {dataService.aboutMe.organizationTypes[2]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div> \r\n    )\r\n}\r\n\r\nexport default IndustryExperience;","import React from \"react\";\r\nimport CoreValues from \"./coreValues\";\r\nimport IndustryExperience from \"./industryExperience\";\r\nimport dataService from \"../../services/dataService\";\r\n\r\nfunction AboutMe () {\r\n  return (\r\n    <div className=\"component\">\r\n      <div className=\"section-header\">ABOUT ME</div>\r\n      <div className=\"row about-me-section\">             \r\n        <div className=\"col-md-12 objective\">\r\n          {dataService.objective.objective}\r\n        </div>   \r\n      </div> \r\n      <div className=\"row about-me-section\">\r\n        <div className=\"col-md-2\"></div>\r\n        <div className=\"col-md-8 about-me-text\">\r\n          <div className=\"cta contact-me\">\r\n            {getCallToAction(dataService.aboutMe.lookingForFullStackDev,\r\n                                  dataService.aboutMe.contactMeBtn,\r\n                                  \"mailto:kevin@peakselfliving.com?subject=I am looking for a Full Stack Developer\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-2\"></div>\r\n      </div>   \r\n      <CoreValues />\r\n      <div className=\"row about-me-section\">\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-4 about-me-text text-center\">\r\n            {getCallToAction(dataService.aboutMe.interestedInPortfolio,\r\n                                  dataService.aboutMe.checkoutPortfolioBtn,\r\n                                  dataService.header.portfolio)}\r\n        </div>\r\n        <div className=\"col-md-4\"></div>\r\n      </div> \r\n      <IndustryExperience />  \r\n    </div>\r\n  );\r\n\r\n  function getCallToAction(ctaText: string, ctaBtnText: string, ctaHref: string) {\r\n    return <div className=\"cta\">\r\n            <div className=\"section-section\">{ctaText}</div>  \r\n            <a className=\"btn btn-success\" href={ctaHref}>Contact Me</a>\r\n          </div>\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\n\r\nfunction AboutThiSite () {\r\n  return (\r\n    <div className=\"component about-this-site-scroll\">\r\n      <div className=\"section-header\">ABOUT THIS SITE</div>\r\n      <div className=\"section-section\">This site was built with:</div>\r\n      <div className=\"section-section\">\r\n        <ul>\r\n          <li>create-react-app</li>\r\n          <li>React</li>\r\n          <li>Typescript</li>\r\n          <li>Material-UI</li>\r\n          <li>Node Package manager (NPM)</li>\r\n          <li>Yarn</li>\r\n          <li>Sentry.io</li>\r\n          <li>React Testing Library</li>\r\n          <li>GitHub Pages</li>     \r\n          <li>Visual Studio Code</li>            \r\n        </ul>         \r\n      </div> \r\n      <div className=\"section-section\">\r\n        Checkout the source code for this site on <a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kevin2themystic/react-resume\">Github</a>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutThiSite;\r\n","import React from 'react';\r\n\r\nexport interface WorkExperienceProps {\r\n  organization: string;\r\n  title: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  location: string;\r\n  locationType: string;\r\n  descriptions: string[];\r\n  viewDetails: boolean;\r\n}\r\n\r\nclass WorkExperience extends React.Component<WorkExperienceProps, {}> {\r\n  render () {\r\n    return (\r\n      <div className=\"work-experience\">\r\n        <div className=\"we-organization\">{this.props.organization}</div>\r\n        <div className=\"we-title\">{this.props.title}</div>\r\n        <div className=\"we-more-info\">\r\n          {this.props.startDate} to {this.props.endDate} in {this.props.location} ({this.props.locationType})\r\n        </div>\r\n        {this.props && !this.props.endDate && <div className=\"we-currently-position\">currently working here</div> }\r\n        {this.props && this.props.viewDetails &&\r\n          <ul>\r\n            {this.props.descriptions.map((weexperience, idx) => \r\n              <li key={idx}>{weexperience}</li>\r\n            )}\r\n          </ul>        \r\n        }\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default WorkExperience;\r\n","import React from 'react';\r\nimport WorkExperience from \"./workExperience\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport workExperienceData from \"../../data/workexperience.json\";\r\n\r\ninterface WorkExperienceState {\r\n  viewDetails: boolean;\r\n  simplifiedDetailsView: boolean;\r\n}\r\n\r\nclass WorkExperienceList extends React.Component<{}, WorkExperienceState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      viewDetails: false,\r\n      simplifiedDetailsView: true\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"component\">\r\n        <div className=\"section-header\">PROFESSIONAL EXPERIENCE</div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-7\"></div>\r\n          <div className=\"col-md-3\">\r\n            {this.state && this.state.viewDetails &&\r\n              <FormControlLabel\r\n                control={<Switch checked={this.state.simplifiedDetailsView} color=\"primary\" onChange={this.handleSimplifiedDetailsChange} name=\"SimplifiedDetails\" />}\r\n                label=\"Simplified Details\"\r\n              />            \r\n            }\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControlLabel\r\n              control={<Switch checked={this.state.viewDetails} color=\"primary\" onChange={this.handleViewDetailsChange} name=\"ViewDetails\" />}\r\n              label=\"View Details\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"we-scroll\">\r\n          {workExperienceData.filter(we => we.type === \"professional\").map((we, idx) => \r\n            this.populateWorkExperience(idx, we.organization, we.title, we.startDate,\r\n                                        we.endDate, we.location, we.locationType,\r\n                                        this.state.simplifiedDetailsView ? we.experiencesSimplified : we.experiences)\r\n          )}\r\n          <div className=\"section-header\">INTERNSHIPS</div>\r\n          {workExperienceData.filter(we => we.type === \"internship\").map((we, idx) => \r\n            this.populateWorkExperience(idx, we.organization, we.title, we.startDate,\r\n                                        we.endDate, we.location, we.locationType,\r\n                                        this.state.simplifiedDetailsView ? we.experiencesSimplified : we.experiences)\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n\r\n  handleViewDetailsChange = () => {\r\n    this.setState({viewDetails: !this.state.viewDetails});\r\n  }\r\n\r\n  handleSimplifiedDetailsChange = () => {\r\n    this.setState({simplifiedDetailsView: !this.state.simplifiedDetailsView});\r\n  }\r\n  \r\n  populateWorkExperience = (idx: number, org: string, title: string, \r\n                            startDt: string, endDt: string, loc: string, locType: string,\r\n                            descriptions: string[]) => {\r\n    return <WorkExperience key={idx} organization={org}\r\n            title={title}\r\n            startDate={startDt}\r\n            endDate={endDt}\r\n            location={loc}\r\n            locationType={locType}\r\n            descriptions={descriptions}\r\n            viewDetails={this.state.viewDetails} />\r\n  }\r\n}\r\n\r\nexport default WorkExperienceList;\r\n","import React from \"react\";\r\n\r\nexport interface EducationProps {\r\n  institution: String;\r\n  programName: String;\r\n  startDate: String;\r\n  endDate: String;\r\n  location: String;\r\n}\r\n\r\nclass Education extends React.Component<EducationProps, {}> {\r\n  render () {\r\n    return (\r\n      <div className=\"education\">\r\n        <div className=\"ed-organization\">{this.props.institution}</div>\r\n        <div className=\"ed-program-name\">{this.props.programName}</div>\r\n        <div className=\"ed-dates\">{this.props.startDate} to {this.props.endDate}</div>\r\n        <div className=\"ed-location\">{this.props.location}</div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport Education from \"./education\";\r\nimport dataService from \"../../services/dataService\";\r\n\r\nfunction EducationList () {\r\n  return (\r\n    <div className=\"component education-scroll\">\r\n      <div className=\"section-header\">EDUCATION</div>\r\n      {dataService.eduction.map((ed, idx) => \r\n        <Education key={idx} institution={ed.institution}\r\n                  programName={ed.programName}\r\n                  startDate={ed.startDate}\r\n                  endDate={ed.endDate}\r\n                  location={ed.location} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationList;\r\n","import React from 'react';\r\n\r\nexport interface TrainingProps {\r\n  name: string;\r\n  platform: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  webLink: string;\r\n}\r\n\r\nclass Training extends React.Component<TrainingProps, {}> {\r\n  render () {\r\n    return (\r\n      <div className=\"section-section\">\r\n        <div>\r\n          <a href={this.props.webLink} \r\n            className=\"link\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\">{this.props.name}</a>{this.props.startDate} on {this.props.platform} </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Training;\r\n","import React from 'react';\r\nimport Training from \"./training\";\r\nimport dataService from \"../../services/dataService\";\r\n\r\nfunction TrainingList () {\r\n  return (\r\n    <div className=\"component training-scroll\">\r\n      <div className=\"section-header\">PLURALSIGHT</div>\r\n      {\r\n        dataService.training.map((td, idx) => \r\n          <Training key={idx} \r\n            name={td.name}\r\n            platform={td.platform}\r\n            startDate={td.startDate}\r\n            endDate={td.endDate}\r\n            webLink={td.webLink} />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainingList;\r\n","import React from \"react\";\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AboutMe from \"./aboutMe/aboutMe\";\r\nimport AboutThisSite from \"./aboutThiSite\"; \r\nimport WorkExperienceList from \"./workExperience/workExperienceList\";\r\nimport EducationList from \"./education/educationList\";\r\nimport TrainingList from \"./training/trainingList\";\r\n\r\nfunction ComponentContent () {\r\n    return (\r\n        <div className=\"component-content\">\r\n            <Switch>\r\n                <Route exact path=\"/\" component={ AboutMe }/>\r\n                <Route exact path=\"/react-resume\" component={ AboutMe }/>\r\n                <Route exact path=\"/about-me\" component={ AboutMe }/>\r\n                <Route exact path=\"/work-xperience\" component={ WorkExperienceList }/>  \r\n                <Route exact path=\"/education\" component={ EducationList }/>\r\n                <Route exact path=\"/training\" component={ TrainingList }/>   \r\n                <Route exact path=\"/about-this-site\" component={ AboutThisSite }/> \r\n                <Route exact render={ () => <div className=\"component\">No content found.</div> }/>\r\n            </Switch>              \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default ComponentContent;","import React from \"react\";\r\n\r\nfunction Footer () {\r\n  return (\r\n    <div className=\"component footer-component\">\r\n      <footer className=\"copywrite\">\r\n          © {new Date().getFullYear()} Kevin Parkinson | Peak Self Living Inc.\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n    Sentry.init(\r\n        {\r\n            dsn: \"https://56b14b16ccc04bc4bc4c876b9cc006a9@o660145.ingest.sentry.io/5764218\",\r\n            integrations: [new Integrations.BrowserTracing()],\r\n            tracesSampleRate: 1.0\r\n        }\r\n    ); \r\n}\r\n\r\nfunction logError () {\r\n    \r\n}\r\n\r\nexport default {\r\n    init,\r\n    logError\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from \"./components/header\";\r\nimport Menu from \"./components/menu\";\r\nimport ComponentContent from \"./components/componentContent\";\r\nimport Footer from \"./components/footer\";\r\nimport logger from \"./services/logService\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  logger.init();\r\n  return (\r\n    <div className=\"App\">\r\n      <Container fixed>\r\n        <Header />  \r\n        <Router>\r\n          <div className=\"main-content\">\r\n            <Menu />\r\n            <ComponentContent />          \r\n          </div>\r\n        </Router>\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/js/dist/collapse.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}